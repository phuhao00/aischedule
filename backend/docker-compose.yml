version: '3.8'

services:
  # MongoDB数据库
  mongodb:
    image: mongo:7.0
    container_name: aischedule-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: aischedule
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - aischedule-network

  # Redis缓存（可选）
  redis:
    image: redis:7.2-alpine
    container_name: aischedule-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aischedule-network

  # Go后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aischedule-backend
    restart: unless-stopped
    environment:
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/aischedule?authSource=admin
      - MONGODB_DATABASE=aischedule
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_EXPIRES_IN=24h
      - LOG_LEVEL=info
      - CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - aischedule-network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: aischedule-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - aischedule-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  aischedule-network:
    driver: bridge